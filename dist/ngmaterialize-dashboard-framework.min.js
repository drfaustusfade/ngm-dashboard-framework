!function(e,t){"use strict";angular.module("adf",["adf.provider"]).value("adfTemplatePath","../src/templates/").value("rowTemplate",'<adf-dashboard-row row="row" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="row in column.rows" />').value("columnTemplate",'<adf-dashboard-column column="column" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="column in row.columns" />').value("adfVersion","0.0.1"),angular.module("adf").directive("adfDashboardColumn",function(e,t,o,i,d){function a(e,t,o){var i=t.widgets;e.$apply(function(){i.splice(o.newIndex,0,i.splice(o.oldIndex,1)[0])})}function n(e,t){for(var o=null,i=0;i<e.widgets.length;i++){var d=e.widgets[i];if(d.wid===t){o=d;break}}return o}function l(e,t){for(var o=null,i=0;i<e.rows.length;i++){for(var d=e.rows[i],a=0;a<d.columns.length;a++){var n=d.columns[a];if(n.cid===t){o=n;break}n.rows&&(o=l(n,t))}if(o)break}return o}function r(e){var t=e.getAttribute("adf-id");return t?parseInt(t):-1}function s(t,o,i,d){var a=r(d.from),s=l(o,a);if(s){var c=r(d.item),u=n(s,c);u?t.$apply(function(){i.widgets||(i.widgets=[]),i.widgets.splice(d.newIndex,0,u)}):e.warn("could not find widget with id "+c)}else e.warn("could not find column with id "+a)}function c(e,t,o){e.$apply(function(){t.widgets.splice(o.oldIndex,1)})}function u(e,t,o,i){var d=t[0],n=Sortable.create(d,{group:"widgets",handle:".adf-move",ghostClass:"placeholder",animation:150,onAdd:function(t){s(e,o,i,t)},onRemove:function(t){c(e,i,t)},onUpdate:function(t){a(e,i,t)}});t.on("$destroy",function(){n.destroy()})}return{restrict:"E",replace:!0,scope:{column:"=",editMode:"=",adfModel:"=",options:"="},templateUrl:o+"dashboard-column.html",link:function(e,o){var a=e.column;a.cid||(a.cid=d.id()),angular.isDefined(a.rows)&&angular.isArray(a.rows)?t(i)(e,function(e){o.append(e)}):u(e,o,e.adfModel,a)}}}),angular.module("adf").directive("adfDashboard",function(e,t,o,i){function d(e){switch(angular.isDefined(e)?e.toLowerCase():null){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",editable:"@",maximizable:"@",adfModel:"=",adfWidgetFilter:"="},controller:function(d){var a={},n={},l=null,r={},s=d.name;d.$watch("adfModel",function(e,s){(null!==s||null===e&&null===s)&&(a=d.adfModel,l=d.adfWidgetFilter,a&&a.rows||(r=d.structure,n=o.structures[r],n?(a?a.rows=angular.copy(n).rows:a=angular.copy(n),a.structure=r):t.error("could not find structure "+r)),a?(a.title||(a.title="Dashboard"),a.titleTemplateUrl||(a.titleTemplateUrl=i+"dashboard-title.html"),d.model=a):t.error("could not find or create model"))},!0),d.editMode=!1,d.editClass="",d.toggleEditMode=function(){d.editMode=!d.editMode,d.editMode&&(d.modelCopy=angular.copy(d.adfModel,{})),d.editMode||e.$broadcast("adfDashboardChanged",s,a)},d.cancelEditMode=function(){d.editMode=!1,d.modelCopy=angular.copy(d.modelCopy,d.adfModel),e.$broadcast("adfDashboardEditsCancelled")}},link:function(e,t,o){var i={name:o.name,editable:!0,maximizable:d(o.maximizable),collapsible:d(o.collapsible)};angular.isDefined(o.editable)&&(i.editable=d(o.editable)),e.options=i},templateUrl:i+"dashboard.html"}}),angular.module("adf.provider",[]).provider("dashboard",function(){var e={},t="",o={},i='<div class="alert alert-danger">{}</div>',d='\r\n      <div class="progress progress-striped active">\n\r\n        <div class="progress-bar" role="progressbar" style="width: 100%">\n\r\n          <span class="sr-only">loading ...</span>\n\r\n        </div>\n\r\n      </div>';this.widget=function(t,o){var i=angular.extend({reload:!1},o);if(i.edit){var d={reload:!0};angular.extend(d,i.edit),i.edit=d}return e[t]=i,this},this.widgetsPath=function(e){return t=e,this},this.structure=function(e,t){return o[e]=t,this},this.messageTemplate=function(e){return i=e,this},this.loadingTemplate=function(e){return d=e,this},this.$get=function(){var a=0;return{widgets:e,widgetsPath:t,structures:o,messageTemplate:i,loadingTemplate:d,id:function(){return++a}}}}),angular.module("adf").directive("adfDashboardRow",function(e,t,o){return{restrict:"E",replace:!0,scope:{row:"=",adfModel:"=",editMode:"=",options:"="},templateUrl:t+"dashboard-row.html",link:function(t,i){angular.isDefined(t.row.columns)&&angular.isArray(t.row.columns)&&e(o)(t,function(e){i.append(e)})}}}),angular.module("adf").directive("adfWidgetContent",function(e,t,o,i,d,a,n,l,r){function s(e){var t=e;return e.indexOf("{widgetsPath}")>=0&&(t=e.replace("{widgetsPath}",r.widgetsPath).replace("//","/"),0===t.indexOf("/")&&(t=t.substring(1))),t}function c(e){var a=t.defer();if(e.template)a.resolve(e.template);else if(e.templateUrl){var n=d.get(e.templateUrl);if(n)a.resolve(n);else{var l=o.getTrustedResourceUrl(s(e.templateUrl));i.get(l).success(function(t){d.put(e.templateUrl,t),a.resolve(t)}).error(function(){a.reject("could not load template")})}}return a.promise}function u(o,i,d){var s=o.model,u=o.content;i.html(r.loadingTemplate);var f=o.$new();s.config||(s.config={}),f.config=s.config;var g={$scope:f,widget:s,config:s.config},m={};return m.$tpl=c(u),u.resolve&&angular.forEach(u.resolve,function(e,t){m[t]=angular.isString(e)?l.get(e):l.invoke(e,e,g)}),t.all(m).then(function(e){angular.extend(e,g);var t=e.$tpl;if(i.html(t),u.controller){var o=n(u.controller,e);u.controllerAs&&(f[u.controllerAs]=o),i.children().data("$ngControllerController",o)}a(i.contents())(f)},function(t){var o="Could not resolve all promises";t&&(o+=": "+t),e.warn(o),i.html(r.messageTemplate.replace(/{}/g,o))}),d&&d.$destroy(),f}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(e,t){var o=u(e,t,null);e.$on("widgetConfigChanged",function(){o=u(e,t,o)}),e.$on("widgetReload",function(){o=u(e,t,o)})}}}),angular.module("adf").directive("adfWidget",function(e,t,o){function i(o){var i=o.definition;if(i){var d=t.widgets[i.type];if(d){i.wid||(i.wid=t.id()),o.widget=angular.copy(d);var a=i.config;a?angular.isString(a)&&(a=angular.fromJson(a)):a={},o.config=a,o.widgetState||(o.widgetState={},o.widgetState.isCollapsed=!1)}else e.warn("could not find widget "+i.type)}else e.debug("definition not specified, widget was probably removed")}function d(t,o){var i=t.definition;i?t.reload=function(){t.$broadcast("widgetReload")}:e.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:o+"widget.html",scope:{definition:"=",col:"=column",editMode:"=",options:"=",widgetState:"="},controller:function(e){},compile:function(){return{pre:i,post:d}}}}),angular.module("adf").run(["$templateCache",function(e){e.put("../src/templates/dashboard-column.html",'<div adf-id={{column.cid}} class=col ng-class=column.styleClass ng-model=column.widgets> <adf-widget ng-repeat="definition in column.widgets" definition=definition column=column options=options widget-state=widgetState>  </adf-widget></div> '),e.put("../src/templates/dashboard-edit.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>Edit Dashboard</h4> </div> <div class=modal-body> <form role=form> <div class=form-group> <label for=dashboardTitle>Title</label> <input type=text class=form-control id=dashboardTitle ng-model=copy.title required> </div> <div class=form-group> <label>Structure</label> <div class=radio ng-repeat="(key, structure) in structures"> <label> <input type=radio value={{key}} ng-model=model.structure ng-change="changeStructure(key, structure)"> {{key}} </label> </div> </div> </form> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div> '),e.put("../src/templates/dashboard-row.html","<div class=row ng-class=row.styleClass>  </div> "),e.put("../src/templates/dashboard-title.html",'<h3 class="header red-text text-lighten-2"> {{model.title}} </h3> '),e.put("../src/templates/dashboard.html",'<div class=dashboard-container> <div ng-include src=model.titleTemplateUrl></div> <div class=dashboard> <adf-dashboard-row row=row adf-model=model options=options ng-repeat="row in model.rows"> </adf-dashboard-row></div> </div> '),e.put("../src/templates/widget-add.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>Add new widget</h4> </div> <div class=modal-body> <div style="display: inline-block;"> <dl class=dl-horizontal> <dt ng-repeat-start="(key, widget) in widgets"> <a href ng-click=addWidget(key)> {{widget.title}} </a> </dt> <dd ng-repeat-end ng-if=widget.description> {{widget.description}} </dd> </dl> </div> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div>'),e.put("../src/templates/widget-edit.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>{{widget.title}}</h4> </div> <div class=modal-body> <form role=form> <div class=form-group> <label for=widgetTitle>Title</label> <input type=text class=form-control id=widgetTitle ng-model=definition.title placeholder="Enter title" required> </div> </form> <div ng-if=widget.edit> <adf-widget-content model=definition content=widget.edit> </adf-widget-content></div> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div>'),e.put("../src/templates/widget.html",'<div adf-id="{{ definition.wid }}" adf-widget-type="{{ definition.type }}" class="widget {{ definition.card }}"> <adf-widget-content model=definition content=widget> </adf-widget-content></div> ')}])}(window);
//# sourceMappingURL=ngmaterialize-dashboard-framework.min.js.map