/*! ngmaterialize-dashboard-framework 0.0.1 (2015-07-29) */
angular.module("ngm").directive("ngmDashboardColumn",["$log","$compile","ngmTemplatePath","rowTemplate","dashboard",function(a,b,c,d,e){"use strict";function f(a,b,c){var d=b.widgets;a.$apply(function(){d.splice(c.newIndex,0,d.splice(c.oldIndex,1)[0])})}function g(a,b){for(var c=null,d=0;d<a.widgets.length;d++){var e=a.widgets[d];if(e.wid===b){c=e;break}}return c}function h(a,b){for(var c=null,d=0;d<a.rows.length;d++){for(var e=a.rows[d],f=0;f<e.columns.length;f++){var g=e.columns[f];if(g.cid===b){c=g;break}g.rows&&(c=h(g,b))}if(c)break}return c}function i(a){var b=a.getAttribute("ngm-id");return b?parseInt(b):-1}function j(b,c,d,e){var f=i(e.from),j=h(c,f);if(j){var k=i(e.item),l=g(j,k);l?b.$apply(function(){d.widgets||(d.widgets=[]),d.widgets.splice(e.newIndex,0,l)}):a.warn("could not find widget with id "+k)}else a.warn("could not find column with id "+f)}function k(a,b,c){a.$apply(function(){b.widgets.splice(c.oldIndex,1)})}function l(a,b,c,d){var e=b[0],g=Sortable.create(e,{group:"widgets",handle:".ngm-move",ghostClass:"placeholder",animation:150,onAdd:function(b){j(a,c,d,b)},onRemove:function(b){k(a,d,b)},onUpdate:function(b){f(a,d,b)}});b.on("$destroy",function(){g.destroy()})}return{restrict:"E",replace:!0,scope:{column:"=",editMode:"=",ngmModel:"=",options:"="},templateUrl:c+"dashboard-column.html",link:function(a,c){var f=a.column;f.cid||(f.cid=e.id()),angular.isDefined(f.rows)&&angular.isArray(f.rows)?b(d)(a,function(a){c.append(a)}):l(a,c,a.ngmModel,f)}}}]),angular.module("ngm").directive("ngmDashboard",["$rootScope","$log","dashboard","ngmTemplatePath",function(a,b,c,d){"use strict";function e(a){switch(angular.isDefined(a)?a.toLowerCase():null){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(a)}}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",editable:"@",maximizable:"@",ngmModel:"=",ngmWidgetFilter:"="},controller:["$scope",function(a){var e={},f={},g=null,h={};a.name;a.$watch("ngmModel",function(i,j){(null!==j||null===i&&null===j)&&(e=a.ngmModel,g=a.ngmWidgetFilter,e&&e.rows||(h=a.structure,f=c.structures[h],f?(e?e.rows=angular.copy(f).rows:e=angular.copy(f),e.structure=h):b.error("could not find structure "+h)),e?(e.title||(e.title="Dashboard"),e.titleTemplateUrl||(e.titleTemplateUrl=d+"dashboard-title.html"),a.model=e):b.error("could not find or create model"))},!0),a.editMode=!1,a.editClass=""}],link:function(a,b,c){var d={name:c.name,editable:!0,maximizable:e(c.maximizable),collapsible:e(c.collapsible)};angular.isDefined(c.editable)&&(d.editable=e(c.editable)),a.options=d},templateUrl:d+"dashboard.html"}}]),angular.module("ngm",["ngm.provider"]).value("ngmTemplatePath","../src/templates/").value("rowTemplate",'<ngm-dashboard-row row="row" ngm-model="ngmModel" options="options" edit-mode="editMode" ng-repeat="row in column.rows" />').value("columnTemplate",'<ngm-dashboard-column column="column" ngm-model="ngmModel" options="options" edit-mode="editMode" ng-repeat="column in row.columns" />').value("ngmVersion","0.0.1"),angular.module("ngm.provider",[]).provider("dashboard",function(){var a={},b="",c={},d='<div class="alert alert-danger">{}</div>',e='      <div class="progress progress-striped active">\n        <div class="progress-bar" role="progressbar" style="width: 100%">\n          <span class="sr-only">loading ...</span>\n        </div>\n      </div>';this.widget=function(b,c){var d=angular.extend({reload:!1},c);if(d.edit){var e={reload:!0};angular.extend(e,d.edit),d.edit=e}return a[b]=d,this},this.widgetsPath=function(a){return b=a,this},this.structure=function(a,b){return c[a]=b,this},this.messageTemplate=function(a){return d=a,this},this.loadingTemplate=function(a){return e=a,this},this.$get=function(){var f=0;return{widgets:a,widgetsPath:b,structures:c,messageTemplate:d,loadingTemplate:e,id:function(){return++f}}}}),angular.module("ngm").directive("ngmDashboardRow",["$compile","ngmTemplatePath","columnTemplate",function(a,b,c){"use strict";return{restrict:"E",replace:!0,scope:{row:"=",ngmModel:"=",editMode:"=",options:"="},templateUrl:b+"dashboard-row.html",link:function(b,d){angular.isDefined(b.row.columns)&&angular.isArray(b.row.columns)&&a(c)(b,function(a){d.append(a)})}}}]),angular.module("ngm").directive("ngmWidgetContent",["$log","$q","$sce","$http","$templateCache","$compile","$controller","$injector","dashboard",function(a,b,c,d,e,f,g,h,i){function j(a){var b=a;return a.indexOf("{widgetsPath}")>=0&&(b=a.replace("{widgetsPath}",i.widgetsPath).replace("//","/"),0===b.indexOf("/")&&(b=b.substring(1))),b}function k(a){var f=b.defer();if(a.template)f.resolve(a.template);else if(a.templateUrl){var g=e.get(a.templateUrl);if(g)f.resolve(g);else{var h=c.getTrustedResourceUrl(j(a.templateUrl));d.get(h).success(function(b){e.put(a.templateUrl,b),f.resolve(b)}).error(function(){f.reject("could not load template")})}}return f.promise}function l(c,d,e){var j=c.model,l=c.content;d.html(i.loadingTemplate);var m=c.$new();j.config||(j.config={}),m.config=j.config;var n={$scope:m,$element:d.parent(),widget:j,config:j.config},o={};return o.$tpl=k(l),l.resolve&&angular.forEach(l.resolve,function(a,b){angular.isString(a)?o[b]=h.get(a):o[b]=h.invoke(a,a,n)}),b.all(o).then(function(a){angular.extend(a,n);var b=a.$tpl;if(d.html(b),l.controller){var c=g(l.controller,a);l.controllerAs&&(m[l.controllerAs]=c),d.children().data("$ngControllerController",c)}f(d.contents())(m)},function(b){var c="Could not resolve all promises";b&&(c+=": "+b),a.warn(c),d.html(i.messageTemplate.replace(/{}/g,c))}),e&&e.$destroy(),m}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(a,b){var c=l(a,b,null);a.$on("widgetReload",function(){c=l(a,b,c)}),a.$on("widgetConfigChanged",function(d,e){angular.extend(a.model.config,e),c=l(a,b,c)})}}}]),angular.module("ngm").directive("ngmWidget",["$log","dashboard","ngmTemplatePath",function(a,b,c){function d(c){var d=c.definition;if(d){var e=b.widgets[d.type];if(e){d.wid||(d.wid=b.id()),c.widget=angular.copy(e);var f=d.config;f?angular.isString(f)&&(f=angular.fromJson(f)):f={},c.config=f,c.widgetState||(c.widgetState={},c.widgetState.isCollapsed=!1)}else a.warn("could not find widget "+d.type)}else a.debug("definition not specified, widget was probably removed")}function e(b,c){var d=b.definition;d?b.reload=function(){b.$broadcast("widgetReload")}:a.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:c+"widget.html",scope:{definition:"=",col:"=column",editMode:"=",options:"=",widgetState:"="},controller:["$scope",function(a){}],compile:function(){return{pre:d,post:e}}}}]),angular.module("ngm").run(["$templateCache",function(a){"use strict";a.put("../src/templates/dashboard-column.html",'<div ngm-id="{{column.cid}}" class="col" ng-class="column.styleClass" ng-model="column.widgets"><ngm-widget ng-repeat="definition in column.widgets" definition="definition" column="column" options="options" widget-state="widgetState"></div>'),a.put("../src/templates/dashboard-row.html",'<div class="row" ng-class="row.styleClass"></div>'),a.put("../src/templates/dashboard-title.html",'<h3 class="header red-text text-lighten-2">{{model.title}}</h3>'),a.put("../src/templates/dashboard.html",'<div class="dashboard-container"><div ng-include src="model.titleTemplateUrl"></div><div class="dashboard"><ngm-dashboard-row row="row" ngm-model="model" options="options" ng-repeat="row in model.rows"></div></div>'),a.put("../src/templates/widget.html",'<div ngm-id="{{ definition.wid }}" ngm-widget-type="{{ definition.type }}" class="widget {{ definition.card }}"><ngm-widget-content model="definition" content="widget"></div>')}]);