!function(e,t){"use strict";angular.module("adf",["adf.provider"]).value("adfTemplatePath","../src/templates/").value("rowTemplate",'<adf-dashboard-row row="row" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="row in column.rows" />').value("columnTemplate",'<adf-dashboard-column column="column" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="column in row.columns" />').value("adfVersion","0.0.1"),angular.module("adf").directive("adfDashboardColumn",function(e,t,n,o,a){function i(e,t,n){var o=t.widgets;e.$apply(function(){o.splice(n.newIndex,0,o.splice(n.oldIndex,1)[0])})}function d(e,t){for(var n=null,o=0;o<e.widgets.length;o++){var a=e.widgets[o];if(a.wid===t){n=a;break}}return n}function r(e,t){for(var n=null,o=0;o<e.rows.length;o++){for(var a=e.rows[o],i=0;i<a.columns.length;i++){var d=a.columns[i];if(d.cid===t){n=d;break}d.rows&&(n=r(d,t))}if(n)break}return n}function l(e){var t=e.getAttribute("adf-id");return t?parseInt(t):-1}function s(t,n,o,a){var i=l(a.from),s=r(n,i);if(s){var c=l(a.item),u=d(s,c);u?t.$apply(function(){o.widgets||(o.widgets=[]),o.widgets.splice(a.newIndex,0,u)}):e.warn("could not find widget with id "+c)}else e.warn("could not find column with id "+i)}function c(e,t,n){e.$apply(function(){t.widgets.splice(n.oldIndex,1)})}function u(e,t,n,o){var a=t[0],d=Sortable.create(a,{group:"widgets",handle:".adf-move",ghostClass:"placeholder",animation:150,onAdd:function(t){s(e,n,o,t)},onRemove:function(t){c(e,o,t)},onUpdate:function(t){i(e,o,t)}});t.on("$destroy",function(){d.destroy()})}return{restrict:"E",replace:!0,scope:{column:"=",editMode:"=",adfModel:"=",options:"="},templateUrl:n+"dashboard-column.html",link:function(e,n){var i=e.column;i.cid||(i.cid=a.id()),angular.isDefined(i.rows)&&angular.isArray(i.rows)?t(o)(e,function(e){n.append(e)}):u(e,n,e.adfModel,i)}}}),angular.module("adf").directive("adfDashboard",function(e,t,n,o){function a(e){switch(angular.isDefined(e)?e.toLowerCase():null){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",editable:"@",maximizable:"@",adfModel:"=",adfWidgetFilter:"="},controller:function(a){var i={},d={},r=null,l={},s=a.name;a.$watch("adfModel",function(e,s){(null!==s||null===e&&null===s)&&(i=a.adfModel,r=a.adfWidgetFilter,i&&i.rows||(l=a.structure,d=n.structures[l],d?(i?i.rows=angular.copy(d).rows:i=angular.copy(d),i.structure=l):t.error("could not find structure "+l)),i?(i.title||(i.title="Dashboard"),i.titleTemplateUrl||(i.titleTemplateUrl=o+"dashboard-title.html"),a.model=i):t.error("could not find or create model"))},!0),a.editMode=!1,a.editClass="",a.toggleEditMode=function(){a.editMode=!a.editMode,a.editMode&&(a.modelCopy=angular.copy(a.adfModel,{})),a.editMode||e.$broadcast("adfDashboardChanged",s,i)},a.cancelEditMode=function(){a.editMode=!1,a.modelCopy=angular.copy(a.modelCopy,a.adfModel),e.$broadcast("adfDashboardEditsCancelled")}},link:function(e,t,n){var o={name:n.name,editable:!0,maximizable:a(n.maximizable),collapsible:a(n.collapsible)};angular.isDefined(n.editable)&&(o.editable=a(n.editable)),e.options=o},templateUrl:o+"dashboard.html"}}),angular.module("adf.provider",[]).provider("dashboard",function(){var e={},t="",n={},o='<div class="alert alert-danger">{}</div>',a='\r\n      <div class="progress progress-striped active">\n\r\n        <div class="progress-bar" role="progressbar" style="width: 100%">\n\r\n          <span class="sr-only">loading ...</span>\n\r\n        </div>\n\r\n      </div>';this.widget=function(t,n){var o=angular.extend({reload:!1},n);if(o.edit){var a={reload:!0};angular.extend(a,o.edit),o.edit=a}return e[t]=o,this},this.widgetsPath=function(e){return t=e,this},this.structure=function(e,t){return n[e]=t,this},this.messageTemplate=function(e){return o=e,this},this.loadingTemplate=function(e){return a=e,this},this.$get=function(){var i=0;return{widgets:e,widgetsPath:t,structures:n,messageTemplate:o,loadingTemplate:a,id:function(){return++i}}}}),angular.module("adf").directive("adfDashboardRow",function(e,t,n){return{restrict:"E",replace:!0,scope:{row:"=",adfModel:"=",editMode:"=",options:"="},templateUrl:t+"dashboard-row.html",link:function(t,o){angular.isDefined(t.row.columns)&&angular.isArray(t.row.columns)&&e(n)(t,function(e){o.append(e)})}}}),angular.module("adf").directive("adfWidgetContent",function(e,t,n,o,a,i,d,r,l){function s(e){var t=e;return e.indexOf("{widgetsPath}")>=0&&(t=e.replace("{widgetsPath}",l.widgetsPath).replace("//","/"),0===t.indexOf("/")&&(t=t.substring(1))),t}function c(e){var i=t.defer();if(e.template)i.resolve(e.template);else if(e.templateUrl){var d=a.get(e.templateUrl);if(d)i.resolve(d);else{var r=n.getTrustedResourceUrl(s(e.templateUrl));o.get(r).success(function(t){a.put(e.templateUrl,t),i.resolve(t)}).error(function(){i.reject("could not load template")})}}return i.promise}function u(n,o,a){var s=n.model,u=n.content;o.html(l.loadingTemplate);var f=n.$new();s.config||(s.config={}),f.config=s.config;var g={$scope:f,widget:s,config:s.config},p={};return p.$tpl=c(u),u.resolve&&angular.forEach(u.resolve,function(e,t){p[t]=angular.isString(e)?r.get(e):r.invoke(e,e,g)}),t.all(p).then(function(e){angular.extend(e,g);var t=e.$tpl;if(o.html(t),u.controller){var n=d(u.controller,e);u.controllerAs&&(f[u.controllerAs]=n),o.children().data("$ngControllerController",n)}i(o.contents())(f)},function(t){var n="Could not resolve all promises";t&&(n+=": "+t),e.warn(n),o.html(l.messageTemplate.replace(/{}/g,n))}),a&&a.$destroy(),f}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(e,t){var n=u(e,t,null);e.$on("widgetConfigChanged",function(){n=u(e,t,n)}),e.$on("widgetReload",function(){n=u(e,t,n)})}}}),angular.module("adf").directive("adfWidget",function(e,t,n){function o(n){var o=n.definition;if(o){var a=t.widgets[o.type];if(a){o.wid||(o.wid=t.id()),n.widget=angular.copy(a);var i=o.config;i?angular.isString(i)&&(i=angular.fromJson(i)):i={},n.config=i,n.widgetState||(n.widgetState={},n.widgetState.isCollapsed=!1)}else e.warn("could not find widget "+o.type)}else e.debug("definition not specified, widget was probably removed")}function a(t,n){var o=t.definition;o?t.reload=function(){t.$broadcast("widgetReload")}:e.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:n+"widget.html",scope:{definition:"=",col:"=column",editMode:"=",options:"=",widgetState:"="},controller:function(e){},compile:function(){return{pre:o,post:a}}}}),angular.module("adf").run(["$templateCache",function(e){e.put("../src/templates/dashboard-column.html",'<div adf-id={{column.cid}} class=col ng-class=column.styleClass ng-model=column.widgets> <adf-widget ng-repeat="definition in column.widgets" definition=definition column=column options=options widget-state=widgetState>  </adf-widget></div> '),e.put("../src/templates/dashboard-row.html","<div class=row ng-class=row.styleClass>  </div> "),e.put("../src/templates/dashboard-title.html",'<h3 class="header red-text text-lighten-2"> {{model.title}} </h3> '),e.put("../src/templates/dashboard.html",'<div class=dashboard-container> <div ng-include src=model.titleTemplateUrl></div> <div class=dashboard> <adf-dashboard-row row=row adf-model=model options=options ng-repeat="row in model.rows"> </adf-dashboard-row></div> </div> '),e.put("../src/templates/widget.html",'<div adf-id="{{ definition.wid }}" adf-widget-type="{{ definition.type }}" class="widget {{ definition.card }}"> <adf-widget-content model=definition content=widget> </adf-widget-content></div> ')}])}(window);
//# sourceMappingURL=ngmaterialize-dashboard-framework.min.js.map